apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "80"
    prometheus.io/scrape: "true"
  labels:
    app: demo-server
  name: demo-server-deployment
  namespace: galah-testbed
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 2
  selector:
    matchLabels:
      app: demo-server
      cdk8s.io/metadata.addr: demo-server-deployment-c87777bc
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: demo-server
        cdk8s.io/metadata.addr: demo-server-deployment-c87777bc
    spec:
      automountServiceAccountToken: false
      containers:
        - args: []
          command: []
          envFrom:
            - configMapRef:
                name: demo-server-env
          image: docker.io/maliciousbucket/chirp-server:master
          imagePullPolicy: IfNotPresent
          name: main
          ports:
            - containerPort: 7080
              name: http
              protocol: TCP
            - containerPort: 80
              name: http-metrics
              protocol: TCP
          resources:
            limits:
              cpu: 1500m
              memory: 2048Mi
            requests:
              cpu: 1000m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: false
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
